// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// Home row mods macro
//#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
//#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

&mt {
    tapping-term-ms = <300>;
    flavor = "balanced";
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            hold-trigger-key-positions = <32 31 30 33 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            hold-trigger-key-positions = <30 31 32 33 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
        };

        comma_question: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            bindings = <&kp COMMA>, <&kp QUESTION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_exclamation: dot_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_EXCLAMATION";
            bindings = <&kp DOT>, <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 2>;
            then-layer = <2>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W        &kp E         &kp R              &kp T      &kp Y   &kp U          &kp I            &kp O             &kp P
&hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LEFT_SHIFT F  &kp G      &kp H   &hmr RSHFT J   &hmr RCTRL K     &hmr RIGHT_ALT L  &hmr RGUI SEMI
&kp Z        &kp X        &kp C         &kp V              &kp B      &kp N   &kp M          &comma_question  &dot_exclamation  &kp APOS
                                        &lt 1 SPACE        &kp RET    &trans  &kp BACKSPACE
            >;
        };

        nav {
            bindings = <
&none  &none  &none  &none  &none    &none         &kp PAGE_UP     &kp UP    &kp PAGE_DOWN  &none
&none  &none  &none  &none  &none    &none         &kp LEFT        &kp DOWN  &kp RIGHT      &none
&none  &none  &none  &none  &none    &none         &none           &none     &none          &none
                     &none  &none    &msc SCRL_UP  &msc SCRL_DOWN
            >;
        };
    };
};
